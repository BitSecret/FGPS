{
  "line_addition": {
    "vars": [
      "a",
      "b",
      "b",
      "c"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "Add",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "midpoint_of_line_judgment": {
    "vars": [
      "m",
      "a",
      "b"
    ],
    "para_len": [
      1,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "m",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "m"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "m",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "m"
            ]
          ],
          [
            "LengthOfLine",
            [
              "m",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidpointOfLine",
            [
              "m",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_judgment_corresponding_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e"
    ],
    "para_len": [
      2,
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "e",
              "a",
              "b"
            ]
          ],
          [
            "Angle",
            [
              "a",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "e",
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "a",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "a",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Angle",
            [
              "b",
              "a",
              "c"
            ]
          ],
          [
            "Angle",
            [
              "d",
              "c",
              "e"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "c",
              "e"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "a",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "c",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "c",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_judgment_alternate_interior_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "b",
              "a",
              "d"
            ]
          ],
          [
            "Angle",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "a",
                  "d"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "c",
                  "d",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Angle",
            [
              "c",
              "b",
              "a"
            ]
          ],
          [
            "Angle",
            [
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "b",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "b",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_judgment_ipsilateral_internal_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "b",
              "a",
              "c"
            ]
          ],
          [
            "Angle",
            [
              "a",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "c",
                      "d"
                    ]
                  ]
                ]
              ],
              "180"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_judgment_par_par": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      2,
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_judgment_per_per": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "a",
              "c",
              "a"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "c",
              "d",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "PerpendicularBetweenLine",
            [
              "c",
              "d",
              "a",
              "d"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "a",
              "d",
              "a"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_property_collinear_extend": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "m"
    ],
    "para_len": [
      2,
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "m",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "m",
              "a",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "m",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "b",
              "m"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "m",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "b",
              "m",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "m",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "m",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "m",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallel_property_corresponding_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e"
    ],
    "para_len": [
      2,
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "e",
              "a",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "a",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "a",
              "b"
            ]
          ]
        ]
      },
      "2": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "c",
              "e"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "a",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "c",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "c",
              "e"
            ]
          ]
        ]
      }
    }
  },
  "parallel_property_alternate_interior_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "a",
                  "d"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "c",
                  "d",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ]
      },
      "2": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "b",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "b",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "parallel_property_ipsilateral_internal_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "c",
                      "d"
                    ]
                  ]
                ]
              ],
              "180"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "parallel_property_par_per": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "c",
              "d",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "a",
              "c",
              "a"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "a",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "c",
              "d",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "perpendicular_judgment_angle": {
    "vars": [
      "a",
      "o",
      "c",
      "o"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "o",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "o",
              "c",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "perpendicular_bisector_judgment_per_and_mid": {
    "vars": [
      "c",
      "o",
      "a",
      "b"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "o",
              "b"
            ]
          ],
          [
            "Angle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "o",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "o"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "o"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "o"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "o"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "c",
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "perpendicular_bisector_judgment_distance_equal": {
    "vars": [
      "c",
      "o",
      "a",
      "b"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "o",
              "b"
            ]
          ],
          [
            "Angle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "o",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "c",
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "perpendicular_bisector_property_distance_equal": {
    "vars": [
      "c",
      "o",
      "a",
      "b"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "c",
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "perpendicular_bisector_property_bisector": {
    "vars": [
      "c",
      "o",
      "a",
      "b"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "c",
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "b",
              "c",
              "o"
            ]
          ],
          [
            "Angle",
            [
              "o",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsBisectorOfAngle",
            [
              "c",
              "o",
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "angle_addition": {
    "vars": [
      "a",
      "b",
      "c",
      "c",
      "b",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Angle",
            [
              "c",
              "b",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "a",
              "b",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "d"
                ]
              ],
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "c",
                      "b",
                      "d"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "b",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "flat_angle": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "180"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "adjacent_complementary_angle": {
    "vars": [
      "a",
      "o",
      "b",
      "b",
      "o",
      "c"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "o",
              "c"
            ]
          ],
          [
            "Angle",
            [
              "a",
              "o",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "b",
              "o",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "o",
                      "b"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "o",
                      "c"
                    ]
                  ]
                ]
              ],
              "180"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "o",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "round_angle": {
    "vars": [
      "a",
      "o",
      "b",
      "b",
      "o",
      "a"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "a",
              "o",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "b",
              "o",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "o",
                      "b"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "o",
                      "a"
                    ]
                  ]
                ]
              ],
              "360"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "o",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "vertical_angle": {
    "vars": [
      "a",
      "o",
      "c",
      "b",
      "o",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "o",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "c",
              "o",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "a",
              "o",
              "c"
            ]
          ],
          [
            "Angle",
            [
              "b",
              "o",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "o",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "o",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "o",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "bisector_of_angle_judgment_angle_equal": {
    "vars": [
      "b",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Angle",
            [
              "a",
              "b",
              "d"
            ]
          ],
          [
            "Angle",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "d"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "b",
                  "c"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsBisectorOfAngle",
            [
              "b",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "bisector_of_angle_property_distance_equal": {
    "vars": [
      "b",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsBisectorOfAngle",
            [
              "b",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "d",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "c"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "d",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "bisector_of_angle_property_line_ratio": {
    "vars": [
      "b",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsBisectorOfAngle",
            [
              "b",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "a"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "a"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "bisector_of_angle_property_length_formula": {
    "vars": [
      "b",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsBisectorOfAngle",
            [
              "b",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "d"
                    ]
                  ]
                ]
              ],
              [
                "Sub",
                [
                  [
                    "Mul",
                    [
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "c"
                        ]
                      ],
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "a"
                        ]
                      ]
                    ]
                  ],
                  [
                    "Mul",
                    [
                      [
                        "LengthOfLine",
                        [
                          "d",
                          "c"
                        ]
                      ],
                      [
                        "LengthOfLine",
                        [
                          "d",
                          "a"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "triangle_property_angle_sum": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "c",
                      "a"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "c",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ],
              "180"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "sine_theorem": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "Sin",
                    [
                      [
                        "MeasureOfAngle",
                        [
                          "a",
                          "b",
                          "c"
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "Sin",
                    [
                      [
                        "MeasureOfAngle",
                        [
                          "b",
                          "c",
                          "a"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "cosine_theorem": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "c"
                        ]
                      ],
                      "2"
                    ]
                  ],
                  [
                    "Mul",
                    [
                      "2",
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "b"
                        ]
                      ],
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "c"
                        ]
                      ],
                      [
                        "Cos",
                        [
                          [
                            "MeasureOfAngle",
                            [
                              "c",
                              "a",
                              "b"
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [
                "Add",
                [
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "b"
                        ]
                      ],
                      "2"
                    ]
                  ],
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "c"
                        ]
                      ],
                      "2"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "triangle_perimeter_formula": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Add",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "c",
                      "a"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "PerimeterOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "triangle_area_formula_common": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "HeightOfTriangle",
                    [
                      "a",
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "HeightOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "triangle_area_formula_sine": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "Sin",
                    [
                      [
                        "MeasureOfAngle",
                        [
                          "c",
                          "a",
                          "b"
                        ]
                      ]
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "median_of_triangle_judgment": {
    "vars": [
      "a",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Line",
            [
              "a",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "d",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMedianOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "altitude_of_triangle_judgment": {
    "vars": [
      "a",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Line",
            [
              "a",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "d",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "d",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "d",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Line",
            [
              "a",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "d",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "d",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Line",
            [
              "a",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "d",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_triangle_judgment_midpoint": {
    "vars": [
      "d",
      "e",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "e",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "d",
              "e"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "d"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "e"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_triangle_judgment_parallel": {
    "vars": [
      "d",
      "e",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "e",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "d",
              "e"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "d",
              "e",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "d"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "e",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "d",
              "e"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "d",
              "e",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "e"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "e",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "d",
              "e"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "d",
              "e",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_triangle_property_parallel": {
    "vars": [
      "d",
      "e",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "d",
              "e",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_triangle_property_length": {
    "vars": [
      "d",
      "e",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ]
        ]
      }
    }
  },
  "circumcenter_of_triangle_judgment_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d",
      "e"
    ],
    "para_len": [
      1,
      3,
      1,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "c",
              "e",
              "a"
            ]
          ],
          [
            "IsPerpendicularBisectorOfLine",
            [
              "o",
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "o",
              "e",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsCircumcenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "circumcenter_of_triangle_property_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      1,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCircumcenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "d",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "o",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "d",
                  "o"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "d",
              "o"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "o",
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "IsCircumcenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "d",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "o",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "o",
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "incenter_of_triangle_judgment_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "b",
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsBisectorOfAngle",
            [
              "c",
              "o",
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsIncenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "centroid_of_triangle_judgment_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "m",
      "n"
    ],
    "para_len": [
      1,
      3,
      1,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMedianOfTriangle",
            [
              "c",
              "m",
              "c",
              "a",
              "b"
            ]
          ],
          [
            "IsMedianOfTriangle",
            [
              "b",
              "n",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "Collinear",
            [
              "c",
              "o",
              "m"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "o",
              "n"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsCentroidOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "centroid_of_triangle_property_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "m"
    ],
    "para_len": [
      1,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCentroidOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "o",
              "m"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "m",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsMedianOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "centroid_of_triangle_property_line_ratio": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "m"
    ],
    "para_len": [
      1,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCentroidOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "o",
              "m"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "m",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "o",
                  "a"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "o",
                      "m"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "o",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "o",
              "m"
            ]
          ]
        ]
      }
    }
  },
  "orthocenter_of_triangle_judgment_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d",
      "e"
    ],
    "para_len": [
      1,
      3,
      1,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsAltitudeOfTriangle",
            [
              "c",
              "d",
              "c",
              "a",
              "b"
            ]
          ],
          [
            "IsAltitudeOfTriangle",
            [
              "b",
              "e",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "Collinear",
            [
              "c",
              "o",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "o",
              "e"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsOrthocenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "orthocenter_of_triangle_property_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      1,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsOrthocenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "o",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "d",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "orthocenter_of_triangle_property_angle": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsOrthocenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "c",
              "o",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "o",
                  "b"
                ]
              ],
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "c",
                      "a"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "o",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "congruent_triangle_judgment_sss": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "f",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_triangle_judgment_sas": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_triangle_judgment_aas": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_triangle_judgment_hl": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_triangle_property_line_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_triangle_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ]
      }
    }
  },
  "congruent_triangle_property_perimeter_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "PerimeterOfTriangle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "PerimeterOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_triangle_property_area_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "AreaOfTriangle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "AreaOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_triangle_property_exchange": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "d",
              "e",
              "f",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_triangle_judgment_sss": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_triangle_judgment_sas": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_triangle_judgment_aas": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_triangle_judgment_hl": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_triangle_property_line_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_triangle_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_triangle_property_perimeter_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "PerimeterOfTriangle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "PerimeterOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_triangle_property_area_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "AreaOfTriangle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "AreaOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_triangle_property_exchange": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "d",
              "e",
              "f",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_triangle_judgment_sss": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "f"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "c",
                      "a"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_triangle_judgment_sas": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "f"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_triangle_judgment_aa": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_triangle_judgment_hl": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "f"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "b",
              "c",
              "b"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "d",
              "e",
              "f",
              "e"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "f"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_triangle_property_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "d",
              "e",
              "f",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "RatioOfSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfSimilarTriangle",
                    [
                      "d",
                      "e",
                      "f",
                      "a",
                      "b",
                      "c"
                    ]
                  ]
                ]
              ],
              "1"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "RatioOfSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ],
          [
            "RatioOfSimilarTriangle",
            [
              "d",
              "e",
              "f",
              "a",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "similar_triangle_property_line_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "RatioOfSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "similar_triangle_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ]
      }
    }
  },
  "similar_triangle_property_perimeter_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "PerimeterOfTriangle",
                    [
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "PerimeterOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "RatioOfSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "similar_triangle_property_area_square_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "AreaOfTriangle",
                    [
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "AreaOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "RatioOfSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_triangle_judgment_sss": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "f",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "f",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "c",
                      "a"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_similar_triangle_judgment_sas": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "f"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_similar_triangle_judgment_aa": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_similar_triangle_judgment_hl": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "f"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "f"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Polygon",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "Polygon",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "e"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_similar_triangle_property_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "d",
              "e",
              "f",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "RatioOfMirrorSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarTriangle",
                    [
                      "d",
                      "e",
                      "f",
                      "a",
                      "b",
                      "c"
                    ]
                  ]
                ]
              ],
              "1"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "RatioOfMirrorSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ],
          [
            "RatioOfMirrorSimilarTriangle",
            [
              "d",
              "e",
              "f",
              "a",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_triangle_property_line_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "RatioOfMirrorSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_triangle_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "f",
                  "d",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "f",
              "d",
              "e"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_triangle_property_perimeter_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "PerimeterOfTriangle",
                    [
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "PerimeterOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "RatioOfMirrorSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_triangle_property_area_square_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "AreaOfTriangle",
                    [
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarTriangle",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "AreaOfTriangle",
            [
              "d",
              "e",
              "f"
            ]
          ],
          [
            "RatioOfMirrorSimilarTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "right_triangle_judgment_angle": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "RightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "right_triangle_judgment_pythagorean_inverse": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "b"
                        ]
                      ],
                      "2"
                    ]
                  ],
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "c"
                        ]
                      ],
                      "2"
                    ]
                  ]
                ]
              ],
              [
                "Pow",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "RightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "right_triangle_property_pythagorean": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "RightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "b"
                        ]
                      ],
                      "2"
                    ]
                  ],
                  [
                    "Pow",
                    [
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "c"
                        ]
                      ],
                      "2"
                    ]
                  ]
                ]
              ],
              [
                "Pow",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "right_triangle_property_length_of_median": {
    "vars": [
      "a",
      "b",
      "c",
      "m"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "RightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsMedianOfTriangle",
            [
              "b",
              "m",
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "m"
                    ]
                  ],
                  "2"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "m"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "isosceles_triangle_judgment_line_equal": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_triangle_judgment_angle_equal": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_triangle_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "isosceles_triangle_property_line_coincidence": {
    "vars": [
      "a",
      "b",
      "c",
      "m"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsMedianOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "a",
              "m",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsMedianOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "a",
              "m",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "m",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsBisectorOfAngle",
            [
              "a",
              "m",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsMedianOfTriangle",
            [
              "a",
              "m",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_right_triangle_judgment_isosceles_and_right": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "RightTriangle",
            [
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsoscelesRightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_right_triangle_property_angle": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesRightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "45"
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              "45"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "equilateral_triangle_judgment_isosceles_and_isosceles": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsoscelesTriangle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "EquilateralTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "equilateral_triangle_property_angle": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "EquilateralTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "a",
                  "b"
                ]
              ],
              "60"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "quadrilateral_property_angle_sum": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "b",
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "c",
                      "d",
                      "a"
                    ]
                  ],
                  [
                    "MeasureOfAngle",
                    [
                      "d",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ],
              "360"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "d",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "quadrilateral_perimeter_formula": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "d",
                      "a"
                    ]
                  ]
                ]
              ],
              [
                "PerimeterOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "a"
            ]
          ],
          [
            "PerimeterOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "altitude_of_quadrilateral_judgment": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "e",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "f",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "f",
                  "e"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "f",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "e",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "f",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "f",
                  "e"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "f",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "e",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "4": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "e",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "e",
                  "f",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "e",
              "f",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "5": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "e",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "c",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "f",
                  "e"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "f",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "6": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "a",
              "e",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "c",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "f",
                  "e"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "f",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "altitude_of_quadrilateral_judgment_left_vertex": {
    "vars": [
      "a",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "f",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "f",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "f",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "f",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "f",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "f",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "f",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "f",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "4": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "f",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "f",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "5": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "c",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "f",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "f",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "6": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "c",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "f",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "f",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "altitude_of_quadrilateral_judgment_right_vertex": {
    "vars": [
      "d",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "d",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "f",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "d",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "f",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "d",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "f",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "d",
              "f",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "4": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "d",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "f",
                  "b"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "d",
              "f",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "5": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "d",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "c",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "6": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "d",
              "f"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "c",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "c",
                  "f",
                  "d"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "c",
              "f",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "altitude_of_quadrilateral_judgment_diagonal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "c",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "a",
              "c",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "d",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "b",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "4": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "d",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "d",
              "b",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_quadrilateral_judgment_midpoint": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "e"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "e"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_quadrilateral_judgment_parallel": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ],
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "e"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ],
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "e"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "3": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ],
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "c",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "4": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ],
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "d",
                  "f"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "c",
              "f"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "5": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ],
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "6": {
        "products": [
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "d",
              "f",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "e",
              "f"
            ]
          ],
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "midsegment_of_quadrilateral_property_length": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "midsegment_of_quadrilateral_property_parallel": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "d",
              "e",
              "f"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "d",
              "e",
              "f"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "e",
              "f",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "circumcenter_of_quadrilateral_property_intersection": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d",
      "e"
    ],
    "para_len": [
      1,
      4,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCircumcenterOfQuadrilateral",
            [
              "o",
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "b",
              "e",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "e",
                  "o"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "d",
              "e",
              "o"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "o",
              "e",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "IsCircumcenterOfQuadrilateral",
            [
              "o",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "e"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "e"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "e"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "e"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "o",
              "e",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_quadrilateral_property_line_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_quadrilateral_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "h",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "h",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_quadrilateral_property_perimeter_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "PerimeterOfQuadrilateral",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfQuadrilateral",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "PerimeterOfQuadrilateral",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_quadrilateral_property_area_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "AreaOfQuadrilateral",
                [
                  "d",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "AreaOfQuadrilateral",
            [
              "d",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "congruent_quadrilateral_property_exchange": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_quadrilateral_property_line_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "e",
                  "h"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_quadrilateral_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "h",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "h",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_quadrilateral_property_perimeter_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "PerimeterOfQuadrilateral",
                [
                  "e",
                  "f",
                  "g",
                  "h"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "PerimeterOfQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_quadrilateral_property_area_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "AreaOfQuadrilateral",
                [
                  "e",
                  "f",
                  "g",
                  "h"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "AreaOfQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "mirror_congruent_quadrilateral_property_exchange": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h",
      "f"
    ],
    "para_len": [
      4,
      5
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_quadrilateral_property_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h",
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "RatioOfSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfSimilarQuadrilateral",
                    [
                      "e",
                      "f",
                      "g",
                      "h",
                      "a",
                      "b",
                      "c",
                      "d"
                    ]
                  ]
                ]
              ],
              "1"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "RatioOfSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ],
          [
            "RatioOfSimilarQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "similar_quadrilateral_property_line_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "f"
                    ]
                  ],
                  [
                    "RatioOfSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ],
          [
            "RatioOfSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "similar_quadrilateral_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "h",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "h",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "similar_quadrilateral_property_perimeter_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "PerimeterOfQuadrilateral",
                    [
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "PerimeterOfQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h"
            ]
          ],
          [
            "RatioOfSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "similar_quadrilateral_property_area_square_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "AreaOfQuadrilateral",
                    [
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "AreaOfQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h"
            ]
          ],
          [
            "RatioOfSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_quadrilateral_property_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h",
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "RatioOfMirrorSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarQuadrilateral",
                    [
                      "e",
                      "f",
                      "g",
                      "h",
                      "a",
                      "b",
                      "c",
                      "d"
                    ]
                  ]
                ]
              ],
              "1"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "RatioOfMirrorSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ],
          [
            "RatioOfMirrorSimilarQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_quadrilateral_property_line_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "h"
            ]
          ],
          [
            "RatioOfMirrorSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_quadrilateral_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "h",
                  "e",
                  "f"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "h",
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_quadrilateral_property_perimeter_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "PerimeterOfQuadrilateral",
                    [
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "PerimeterOfQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h"
            ]
          ],
          [
            "RatioOfMirrorSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "mirror_similar_quadrilateral_property_area_square_ratio": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "AreaOfQuadrilateral",
                    [
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ],
                  [
                    "RatioOfMirrorSimilarQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d",
                      "e",
                      "f",
                      "g",
                      "h"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "AreaOfQuadrilateral",
            [
              "e",
              "f",
              "g",
              "h"
            ]
          ],
          [
            "RatioOfMirrorSimilarQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ]
      }
    }
  },
  "parallelogram_judgment_parallel_and_parallel": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "d",
              "b",
              "c"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "b",
              "a",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallelogram_judgment_parallel_and_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "ParallelBetweenLine",
            [
              "b",
              "a",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallelogram_judgment_equal_and_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "d"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "c"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallelogram_judgment_angle_and_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "c",
                  "d",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "d",
              "a"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallelogram_judgment_diagonal_bisection": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      4,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "o",
              "d"
            ]
          ],
          [
            "IsMidpointOfLine",
            [
              "o",
              "a",
              "c"
            ]
          ],
          [
            "IsMidpointOfLine",
            [
              "o",
              "b",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallelogram_property_opposite_line_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "b",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "parallelogram_property_opposite_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "d",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "parallelogram_property_diagonal_bisection": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      4,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "o",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsMidpointOfLine",
            [
              "o",
              "a",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "parallelogram_area_formula_common": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "HeightOfQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "HeightOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "parallelogram_area_formula_sine": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "Sin",
                    [
                      [
                        "MeasureOfAngle",
                        [
                          "a",
                          "b",
                          "c"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "kite_judgment_equal_and_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "a",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "kite_property_diagonal_perpendicular_bisection": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      4,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "o",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "a",
              "o",
              "b",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "kite_property_opposite_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "c",
                  "d",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "c",
              "d",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "kite_area_formula_diagonal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "b",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "d"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "c"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "kite_area_formula_sine": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "b",
                      "c"
                    ]
                  ],
                  [
                    "Sin",
                    [
                      [
                        "MeasureOfAngle",
                        [
                          "a",
                          "b",
                          "c"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "rectangle_judgment_right_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "Rectangle",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "rectangle_judgment_diagonal_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "c"
            ]
          ],
          [
            "Line",
            [
              "b",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "Rectangle",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "rectangle_property_diagonal_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Rectangle",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "c"
            ]
          ],
          [
            "Line",
            [
              "b",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "rhombus_judgment_parallelogram_and_kite": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Rhombus",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "square_judgment_rhombus_and_rectangle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Rhombus",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Rectangle",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Square",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "trapezoid_judgment_parallel": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Polygon",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "d",
              "b",
              "c"
            ]
          ],
          [
            "~ParallelBetweenLine",
            [
              "b",
              "a",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "trapezoid_area_formula": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "Add",
                    [
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "d"
                        ]
                      ],
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "c"
                        ]
                      ]
                    ]
                  ],
                  [
                    "HeightOfQuadrilateral",
                    [
                      "a",
                      "b",
                      "c",
                      "d"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "HeightOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "right_trapezoid_judgment_right_angle": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "RightTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "right_trapezoid_area_formular": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "RightTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "Add",
                    [
                      [
                        "LengthOfLine",
                        [
                          "a",
                          "d"
                        ]
                      ],
                      [
                        "LengthOfLine",
                        [
                          "b",
                          "c"
                        ]
                      ]
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "a",
                      "b"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "isosceles_trapezoid_judgment_line_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsoscelesTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_trapezoid_judgment_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsoscelesTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_trapezoid_judgment_diagonal_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "c"
            ]
          ],
          [
            "Line",
            [
              "b",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsoscelesTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_trapezoid_property_angle_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "isosceles_trapezoid_property_diagonal_equal": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "round_arc": {
    "vars": [
      "o",
      "a",
      "b",
      "o",
      "b",
      "a"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Arc",
            [
              "o",
              "b",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Add",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "b",
                      "a"
                    ]
                  ]
                ]
              ],
              "360"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "b",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "arc_addition_length": {
    "vars": [
      "o",
      "a",
      "b",
      "o",
      "b",
      "c"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Arc",
            [
              "o",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Arc",
            [
              "o",
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "o",
                  "a",
                  "c"
                ]
              ],
              [
                "Add",
                [
                  [
                    "LengthOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "LengthOfArc",
                    [
                      "o",
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "c"
            ]
          ],
          [
            "LengthOfArc",
            [
              "o",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "arc_addition_measure": {
    "vars": [
      "o",
      "a",
      "b",
      "o",
      "b",
      "c"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Arc",
            [
              "o",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Arc",
            [
              "o",
              "a",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfArc",
                [
                  "o",
                  "a",
                  "c"
                ]
              ],
              [
                "Add",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "b",
                      "c"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "arc_property_center_angle": {
    "vars": [
      "o",
      "a",
      "b",
      "p"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Angle",
            [
              "b",
              "p",
              "a"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfArc",
                [
                  "o",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "b",
                  "p",
                  "a"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "p",
              "a"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "arc_property_circumference_angle_external": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "arc_property_circumference_angle_internal": {
    "vars": [
      "o",
      "a",
      "b",
      "d"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "d",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "a",
              "d",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "d",
                  "b"
                ]
              ],
              [
                "Sub",
                [
                  "180",
                  [
                    "Mul",
                    [
                      [
                        "MeasureOfArc",
                        [
                          "o",
                          "a",
                          "b"
                        ]
                      ],
                      "1/2"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "d",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "arc_length_formula": {
    "vars": [
      "o",
      "a",
      "b"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "o",
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  "1/180*pi",
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "congruent_arc_judgment_length_equal": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "Arc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Cocircular",
            [
              "x",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "x",
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfArc",
                [
                  "y",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfArc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "LengthOfArc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_arc_judgment_measure_equal": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "Arc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Cocircular",
            [
              "x",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfArc",
                [
                  "x",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfArc",
                [
                  "y",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfArc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_arc_judgment_chord_equal": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "Arc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Cocircular",
            [
              "x",
              "c",
              "d"
            ]
          ],
          [
            "Line",
            [
              "a",
              "b"
            ]
          ],
          [
            "Line",
            [
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ],
        "conclusions": [
          [
            "CongruentBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_arc_property_length_equal": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "x",
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfArc",
                [
                  "y",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "LengthOfArc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "congruent_arc_property_measure_equal": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfArc",
                [
                  "x",
                  "a",
                  "b"
                ]
              ],
              [
                "MeasureOfArc",
                [
                  "y",
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfArc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "congruent_arc_property_chord_equal": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "b"
            ]
          ],
          [
            "Line",
            [
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "similar_arc_judgment_cocircular": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "Arc",
            [
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Cocircular",
            [
              "x",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "SimilarBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_arc_property_ratio": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "SimilarBetweenArc",
            [
              "y",
              "c",
              "d",
              "x",
              "a",
              "b"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "RatioOfSimilarArc",
                    [
                      "x",
                      "a",
                      "b",
                      "y",
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "RatioOfSimilarArc",
                    [
                      "y",
                      "c",
                      "d",
                      "x",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ],
              "1"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "RatioOfSimilarArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ],
          [
            "RatioOfSimilarArc",
            [
              "y",
              "c",
              "d",
              "x",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "similar_arc_property_length_ratio": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "x",
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfArc",
                    [
                      "y",
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "RatioOfSimilarArc",
                    [
                      "y",
                      "c",
                      "d",
                      "x",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "LengthOfArc",
            [
              "y",
              "c",
              "d"
            ]
          ],
          [
            "RatioOfSimilarArc",
            [
              "y",
              "c",
              "d",
              "x",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "similar_arc_property_measure_ratio": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfArc",
                [
                  "x",
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfArc",
                    [
                      "y",
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "RatioOfSimilarArc",
                    [
                      "y",
                      "c",
                      "d",
                      "x",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfArc",
            [
              "x",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "y",
              "c",
              "d"
            ]
          ],
          [
            "RatioOfSimilarArc",
            [
              "y",
              "c",
              "d",
              "x",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "similar_arc_property_chord_ratio": {
    "vars": [
      "x",
      "a",
      "b",
      "y",
      "c",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenArc",
            [
              "x",
              "a",
              "b",
              "y",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Line",
            [
              "a",
              "b"
            ]
          ],
          [
            "Line",
            [
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "c",
                      "d"
                    ]
                  ],
                  [
                    "RatioOfSimilarArc",
                    [
                      "y",
                      "c",
                      "d",
                      "x",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ],
          [
            "RatioOfSimilarArc",
            [
              "y",
              "c",
              "d",
              "x",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_length_of_radius_and_diameter": {
    "vars": [
      "o"
    ],
    "para_len": [
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Circle",
            [
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "DiameterOfCircle",
                [
                  "o"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "DiameterOfCircle",
            [
              "o"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_circular_power_chord_and_chord": {
    "vars": [
      "a",
      "e",
      "b",
      "c",
      "e",
      "d",
      "o"
    ],
    "para_len": [
      3,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Cocircular",
            [
              "o",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "e",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "c",
              "e",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "d"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "a"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "e",
                      "b"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "e",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_circular_power_tangent_and_segment_line": {
    "vars": [
      "p",
      "a",
      "p",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      2,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ],
          [
            "Cocircular",
            [
              "o",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "p",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "a"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "a"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "d"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "p",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "p",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "p",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_circular_power_segment_and_segment_line": {
    "vars": [
      "p",
      "a",
      "b",
      "p",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      3,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Cocircular",
            [
              "o",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "p",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "a"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "b"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "c"
                    ]
                  ],
                  [
                    "LengthOfLine",
                    [
                      "p",
                      "d"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "p",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "p",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "p",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "p",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_circular_power_tangent_and_segment_angle": {
    "vars": [
      "p",
      "a",
      "p",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      2,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "c",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Sub",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "d",
                      "a"
                    ]
                  ],
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "c"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "p",
                      "c"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "p",
              "c"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "d",
              "a"
            ]
          ]
        ]
      },
      "2": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "c",
              "a",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Sub",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "d"
                    ]
                  ],
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "c",
                      "a"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "c",
                      "p",
                      "a"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "p",
              "a"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "d"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "c",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_circular_power_segment_and_segment_angle": {
    "vars": [
      "p",
      "a",
      "b",
      "p",
      "c",
      "d",
      "o"
    ],
    "para_len": [
      3,
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "c",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "p",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Sub",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "d",
                      "b"
                    ]
                  ],
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "c"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "a",
                      "p",
                      "c"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "p",
              "c"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "c"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "d",
              "b"
            ]
          ]
        ]
      },
      "2": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "c",
              "a",
              "b",
              "d"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "p",
              "c",
              "d"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "Sub",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "b",
                      "d"
                    ]
                  ],
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "c",
                      "a"
                    ]
                  ]
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfAngle",
                    [
                      "c",
                      "p",
                      "a"
                    ]
                  ],
                  "2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "c",
              "p",
              "a"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "b",
              "d"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "c",
              "a"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_chord_perpendicular_bisect_chord": {
    "vars": [
      "o",
      "p",
      "m",
      "a",
      "b"
    ],
    "para_len": [
      1,
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "m",
              "b"
            ]
          ],
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "m",
                  "p"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "m",
              "p"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "p",
              "m",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "m",
              "b"
            ]
          ],
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "m"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "m",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "m"
            ]
          ],
          [
            "LengthOfLine",
            [
              "m",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "p",
              "m",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "circle_property_chord_perpendicular_bisect_arc": {
    "vars": [
      "o",
      "a",
      "b",
      "p",
      "m",
      "d"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Cocircular",
            [
              "o",
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "m",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "m",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "m",
                  "o"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "a",
              "m",
              "o"
            ]
          ]
        ],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "o",
                  "a",
                  "d"
                ]
              ],
              [
                "LengthOfArc",
                [
                  "o",
                  "d",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "d"
            ]
          ],
          [
            "LengthOfArc",
            [
              "o",
              "d",
              "b"
            ]
          ]
        ]
      },
      "2": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Cocircular",
            [
              "o",
              "a",
              "d",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "m",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "p",
              "m",
              "d"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "m"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "m",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "a",
              "m"
            ]
          ],
          [
            "LengthOfLine",
            [
              "m",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "o",
                  "a",
                  "d"
                ]
              ],
              [
                "LengthOfArc",
                [
                  "o",
                  "d",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "d"
            ]
          ],
          [
            "LengthOfArc",
            [
              "o",
              "d",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "circle_property_angle_of_osculation": {
    "vars": [
      "o",
      "a",
      "b",
      "p"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Angle",
            [
              "b",
              "a",
              "p"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "a",
                  "p"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "b",
              "a",
              "p"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ]
      },
      "2": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Angle",
            [
              "p",
              "b",
              "a"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "b",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "p",
                  "b",
                  "a"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  "1/2"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "p",
              "b",
              "a"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "circle_perimeter_formula": {
    "vars": [
      "o"
    ],
    "para_len": [
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Circle",
            [
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfCircle",
                [
                  "o"
                ]
              ],
              [
                "Mul",
                [
                  "2*pi",
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "PerimeterOfCircle",
            [
              "o"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "circle_area_formula": {
    "vars": [
      "o"
    ],
    "para_len": [
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Circle",
            [
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfCircle",
                [
                  "o"
                ]
              ],
              [
                "Mul",
                [
                  "pi",
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ],
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfCircle",
            [
              "o"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "radius_of_circle_property_length_equal": {
    "vars": [
      "p",
      "a",
      "o"
    ],
    "para_len": [
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a"
            ]
          ],
          [
            "Line",
            [
              "p",
              "a"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "p",
                  "a"
                ]
              ],
              [
                "RadiusOfCircle",
                [
                  "o"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "p",
              "a"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "diameter_of_circle_judgment_pass_centre": {
    "vars": [
      "a",
      "p",
      "b",
      "o"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "Collinear",
            [
              "a",
              "p",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "p",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsDiameterOfCircle",
            [
              "a",
              "b",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "diameter_of_circle_judgment_length_equal": {
    "vars": [
      "a",
      "b",
      "o"
    ],
    "para_len": [
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "DiameterOfCircle",
                [
                  "o"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "DiameterOfCircle",
            [
              "o"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsDiameterOfCircle",
            [
              "a",
              "b",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "diameter_of_circle_judgment_right_angle": {
    "vars": [
      "b",
      "c",
      "a",
      "o"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "b",
                  "c",
                  "a"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsDiameterOfCircle",
            [
              "a",
              "b",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "diameter_of_circle_property_length_equal": {
    "vars": [
      "a",
      "b",
      "o"
    ],
    "para_len": [
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsDiameterOfCircle",
            [
              "a",
              "b",
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "DiameterOfCircle",
                [
                  "o"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "DiameterOfCircle",
            [
              "o"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "diameter_of_circle_property_right_angle": {
    "vars": [
      "b",
      "c",
      "a",
      "o"
    ],
    "para_len": [
      3,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsDiameterOfCircle",
            [
              "a",
              "b",
              "o"
            ]
          ],
          [
            "Cocircular",
            [
              "o",
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Angle",
            [
              "b",
              "c",
              "a"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "c",
              "a",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "tangent_of_circle_judgment_perpendicular": {
    "vars": [
      "p",
      "a",
      "o",
      "q"
    ],
    "para_len": [
      2,
      1,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a"
            ]
          ],
          [
            "IsCentreOfCircle",
            [
              "q",
              "o"
            ]
          ],
          [
            "Angle",
            [
              "q",
              "a",
              "p"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "q",
                  "a",
                  "p"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "q",
              "a",
              "p"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "Cocircular",
            [
              "o",
              "a"
            ]
          ],
          [
            "IsCentreOfCircle",
            [
              "q",
              "o"
            ]
          ],
          [
            "Angle",
            [
              "p",
              "a",
              "q"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "p",
                  "a",
                  "q"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "MeasureOfAngle",
            [
              "p",
              "a",
              "q"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "tangent_of_circle_property_perpendicular": {
    "vars": [
      "p",
      "a",
      "o",
      "q"
    ],
    "para_len": [
      2,
      1,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ],
          [
            "Angle",
            [
              "q",
              "a",
              "p"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "q",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "q",
              "a",
              "p",
              "a"
            ]
          ]
        ],
        "attr_in_conclusions": []
      },
      "2": {
        "products": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ],
          [
            "Angle",
            [
              "p",
              "a",
              "q"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "IsCentreOfCircle",
            [
              "q",
              "o"
            ]
          ]
        ],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "p",
              "a",
              "q",
              "a"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "tangent_of_circle_property_length_equal": {
    "vars": [
      "p",
      "a",
      "p",
      "b",
      "o"
    ],
    "para_len": [
      2,
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsTangentOfCircle",
            [
              "p",
              "a",
              "o"
            ]
          ],
          [
            "IsTangentOfCircle",
            [
              "p",
              "b",
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "p",
                  "a"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "p",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "p",
              "a"
            ]
          ],
          [
            "LengthOfLine",
            [
              "p",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "sector_perimeter_formula": {
    "vars": [
      "o",
      "a",
      "b"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "PerimeterOfSector",
                [
                  "o",
                  "a",
                  "b"
                ]
              ],
              [
                "Add",
                [
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ],
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ],
                  [
                    "LengthOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "PerimeterOfSector",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "sector_area_formula": {
    "vars": [
      "o",
      "a",
      "b"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "Arc",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "AreaOfSector",
                [
                  "o",
                  "a",
                  "b"
                ]
              ],
              [
                "Mul",
                [
                  [
                    "MeasureOfArc",
                    [
                      "o",
                      "a",
                      "b"
                    ]
                  ],
                  "1/360*pi",
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ],
                  [
                    "RadiusOfCircle",
                    [
                      "o"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "AreaOfSector",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "MeasureOfArc",
            [
              "o",
              "a",
              "b"
            ]
          ],
          [
            "RadiusOfCircle",
            [
              "o"
            ]
          ]
        ]
      }
    }
  },
  "perpendicular_bisector_judgment_per_and_bisect": {
    "vars": [
      "a",
      "d",
      "b",
      "c"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsBisectorOfAngle",
            [
              "a",
              "d",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [
          [
            "Collinear",
            [
              "b",
              "d",
              "c"
            ]
          ]
        ],
        "algebra_constraints": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "b",
                  "d"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "d",
                  "c"
                ]
              ]
            ]
          ]
        ],
        "attr_in_algebra_constraints": [
          [
            "LengthOfLine",
            [
              "b",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "d",
              "c"
            ]
          ]
        ],
        "conclusions": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "a",
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "right_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "RightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "b",
              "c",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "a",
                  "c"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "isosceles_right_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesRightTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "RightTriangle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "equilateral_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c"
    ],
    "para_len": [
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "EquilateralTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsoscelesTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsoscelesTriangle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "IsoscelesTriangle",
            [
              "c",
              "a",
              "b"
            ]
          ],
          [
            "EquilateralTriangle",
            [
              "b",
              "c",
              "a"
            ]
          ],
          [
            "EquilateralTriangle",
            [
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "kite_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "a",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "c",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ],
          [
            "Kite",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "parallelogram_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "d",
              "b",
              "c"
            ]
          ],
          [
            "ParallelBetweenLine",
            [
              "b",
              "a",
              "c",
              "d"
            ]
          ],
          [
            "Parallelogram",
            [
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "Parallelogram",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "Parallelogram",
            [
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "rhombus_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Rhombus",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Kite",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Kite",
            [
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "Rhombus",
            [
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "Rhombus",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "Rhombus",
            [
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "rectangle_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Rectangle",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Parallelogram",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "b",
              "c",
              "b"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "c",
              "d",
              "c"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "c",
              "d",
              "a",
              "d"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "d",
              "a",
              "b",
              "a"
            ]
          ],
          [
            "Rectangle",
            [
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "Rectangle",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "Rectangle",
            [
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "square_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Square",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Rhombus",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Rectangle",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Square",
            [
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "Square",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "Square",
            [
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "trapezoid_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "d",
              "b",
              "c"
            ]
          ],
          [
            "Trapezoid",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "isosceles_trapezoid_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsoscelesTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          ],
          [
            "IsoscelesTrapezoid",
            [
              "c",
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "b"
            ]
          ],
          [
            "LengthOfLine",
            [
              "c",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "right_trapezoid_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "RightTrapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Trapezoid",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "d",
              "a",
              "b",
              "a"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "b",
              "c",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_midpoint_of_line_definition": {
    "vars": [
      "m",
      "a",
      "b"
    ],
    "para_len": [
      1,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidpointOfLine",
            [
              "m",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "m"
                ]
              ],
              [
                "LengthOfLine",
                [
                  "m",
                  "b"
                ]
              ]
            ]
          ],
          [
            "IsMidpointOfLine",
            [
              "m",
              "b",
              "a"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfLine",
            [
              "a",
              "m"
            ]
          ],
          [
            "LengthOfLine",
            [
              "m",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "is_midpoint_of_arc_definition": {
    "vars": [
      "m",
      "o",
      "a",
      "b"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidpointOfArc",
            [
              "m",
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfArc",
                [
                  "o",
                  "a",
                  "m"
                ]
              ],
              [
                "LengthOfArc",
                [
                  "o",
                  "m",
                  "b"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "LengthOfArc",
            [
              "o",
              "a",
              "m"
            ]
          ],
          [
            "LengthOfArc",
            [
              "o",
              "m",
              "b"
            ]
          ]
        ]
      }
    }
  },
  "parallel_between_line_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "ParallelBetweenLine",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "ParallelBetweenLine",
            [
              "d",
              "c",
              "b",
              "a"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "perpendicular_between_line_definition": {
    "vars": [
      "a",
      "o",
      "c",
      "o"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "o",
              "c",
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "o",
                  "c"
                ]
              ],
              "90"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "o",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "is_perpendicular_bisector_of_line_definition": {
    "vars": [
      "c",
      "o",
      "a",
      "b"
    ],
    "para_len": [
      2,
      2
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsPerpendicularBisectorOfLine",
            [
              "c",
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "o",
              "c",
              "o"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "c",
              "o",
              "b",
              "o"
            ]
          ],
          [
            "IsMidpointOfLine",
            [
              "o",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_bisector_of_angle_definition": {
    "vars": [
      "b",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsBisectorOfAngle",
            [
              "b",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "MeasureOfAngle",
                [
                  "a",
                  "b",
                  "d"
                ]
              ],
              [
                "MeasureOfAngle",
                [
                  "d",
                  "b",
                  "c"
                ]
              ]
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "MeasureOfAngle",
            [
              "a",
              "b",
              "d"
            ]
          ],
          [
            "MeasureOfAngle",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ]
      }
    }
  },
  "is_median_of_triangle_definition": {
    "vars": [
      "a",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMedianOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsMidpointOfLine",
            [
              "d",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_altitude_of_triangle_definition": {
    "vars": [
      "a",
      "d",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsAltitudeOfTriangle",
            [
              "a",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "a",
                  "d"
                ]
              ],
              [
                "HeightOfTriangle",
                [
                  "a",
                  "b",
                  "c"
                ]
              ]
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "d",
              "a",
              "d"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "a",
              "d",
              "c",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "HeightOfTriangle",
            [
              "a",
              "b",
              "c"
            ]
          ],
          [
            "LengthOfLine",
            [
              "a",
              "d"
            ]
          ]
        ]
      }
    }
  },
  "is_midsegment_of_triangle_definition": {
    "vars": [
      "d",
      "e",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      2,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidsegmentOfTriangle",
            [
              "d",
              "e",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsMidpointOfLine",
            [
              "d",
              "a",
              "b"
            ]
          ],
          [
            "IsMidpointOfLine",
            [
              "e",
              "a",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_circumcenter_of_triangle_definition": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCircumcenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsCircumcenterOfTriangle",
            [
              "o",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "IsCircumcenterOfTriangle",
            [
              "o",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_incenter_of_triangle_definition": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsIncenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsBisectorOfAngle",
            [
              "a",
              "o",
              "c",
              "a",
              "b"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "b",
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "c",
              "o",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "IsIncenterOfTriangle",
            [
              "o",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "IsIncenterOfTriangle",
            [
              "o",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_centroid_of_triangle_definition": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCentroidOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsCentroidOfTriangle",
            [
              "o",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "IsCentroidOfTriangle",
            [
              "o",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_orthocenter_of_triangle_definition": {
    "vars": [
      "o",
      "a",
      "b",
      "c"
    ],
    "para_len": [
      1,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsOrthocenterOfTriangle",
            [
              "o",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsOrthocenterOfTriangle",
            [
              "o",
              "b",
              "c",
              "a"
            ]
          ],
          [
            "IsOrthocenterOfTriangle",
            [
              "o",
              "c",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_between_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "CongruentBetweenTriangle",
            [
              "b",
              "c",
              "a",
              "e",
              "f",
              "d"
            ]
          ],
          [
            "CongruentBetweenTriangle",
            [
              "c",
              "a",
              "b",
              "f",
              "d",
              "e"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_between_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorCongruentBetweenTriangle",
            [
              "b",
              "c",
              "a",
              "f",
              "d",
              "e"
            ]
          ],
          [
            "MirrorCongruentBetweenTriangle",
            [
              "c",
              "a",
              "b",
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_between_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "SimilarBetweenTriangle",
            [
              "b",
              "c",
              "a",
              "e",
              "f",
              "d"
            ]
          ],
          [
            "SimilarBetweenTriangle",
            [
              "c",
              "a",
              "b",
              "f",
              "d",
              "e"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_similar_between_triangle_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f"
    ],
    "para_len": [
      3,
      3
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorSimilarBetweenTriangle",
            [
              "b",
              "c",
              "a",
              "f",
              "d",
              "e"
            ]
          ],
          [
            "MirrorSimilarBetweenTriangle",
            [
              "c",
              "a",
              "b",
              "e",
              "f",
              "d"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_altitude_of_quadrilateral_definition": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsAltitudeOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "Equal",
            [
              [
                "LengthOfLine",
                [
                  "e",
                  "f"
                ]
              ],
              [
                "HeightOfQuadrilateral",
                [
                  "a",
                  "b",
                  "c",
                  "d"
                ]
              ]
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "b",
              "f",
              "e",
              "f"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "e",
              "f",
              "c",
              "f"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "d",
              "e",
              "f",
              "e"
            ]
          ],
          [
            "PerpendicularBetweenLine",
            [
              "f",
              "e",
              "a",
              "e"
            ]
          ]
        ],
        "attr_in_conclusions": [
          [
            "HeightOfQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "LengthOfLine",
            [
              "e",
              "f"
            ]
          ]
        ]
      }
    }
  },
  "is_midsegment_of_quadrilateral_definition": {
    "vars": [
      "e",
      "f",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      2,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "e",
              "f",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsMidpointOfLine",
            [
              "e",
              "a",
              "b"
            ]
          ],
          [
            "IsMidpointOfLine",
            [
              "f",
              "c",
              "d"
            ]
          ],
          [
            "IsMidsegmentOfQuadrilateral",
            [
              "f",
              "e",
              "c",
              "d",
              "a",
              "b"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_circumcenter_of_quadrilateral_definition": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      1,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsCircumcenterOfQuadrilateral",
            [
              "o",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsCircumcenterOfQuadrilateral",
            [
              "o",
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "IsCircumcenterOfQuadrilateral",
            [
              "o",
              "c",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "IsCircumcenterOfQuadrilateral",
            [
              "o",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_incenter_of_quadrilateral_definition": {
    "vars": [
      "o",
      "a",
      "b",
      "c",
      "d"
    ],
    "para_len": [
      1,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsIncenterOfQuadrilateral",
            [
              "o",
              "a",
              "b",
              "c",
              "d"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsBisectorOfAngle",
            [
              "a",
              "o",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "b",
              "o",
              "a",
              "b",
              "c"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "c",
              "o",
              "b",
              "c",
              "d"
            ]
          ],
          [
            "IsBisectorOfAngle",
            [
              "d",
              "o",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "IsIncenterOfQuadrilateral",
            [
              "o",
              "b",
              "c",
              "d",
              "a"
            ]
          ],
          [
            "IsIncenterOfQuadrilateral",
            [
              "o",
              "c",
              "d",
              "a",
              "b"
            ]
          ],
          [
            "IsIncenterOfQuadrilateral",
            [
              "o",
              "d",
              "a",
              "b",
              "c"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "congruent_between_quadrilateral_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "CongruentBetweenQuadrilateral",
            [
              "b",
              "c",
              "d",
              "a",
              "f",
              "g",
              "h",
              "e"
            ]
          ],
          [
            "CongruentBetweenQuadrilateral",
            [
              "c",
              "d",
              "a",
              "b",
              "g",
              "h",
              "e",
              "f"
            ]
          ],
          [
            "CongruentBetweenQuadrilateral",
            [
              "d",
              "a",
              "b",
              "c",
              "h",
              "e",
              "f",
              "g"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_congruent_between_quadrilateral_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "b",
              "c",
              "d",
              "a",
              "h",
              "e",
              "f",
              "g"
            ]
          ],
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "c",
              "d",
              "a",
              "b",
              "g",
              "h",
              "e",
              "f"
            ]
          ],
          [
            "MirrorCongruentBetweenQuadrilateral",
            [
              "d",
              "a",
              "b",
              "c",
              "f",
              "g",
              "h",
              "e"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "similar_between_quadrilateral_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "SimilarBetweenQuadrilateral",
            [
              "b",
              "c",
              "d",
              "a",
              "f",
              "g",
              "h",
              "e"
            ]
          ],
          [
            "SimilarBetweenQuadrilateral",
            [
              "c",
              "d",
              "a",
              "b",
              "g",
              "h",
              "e",
              "f"
            ]
          ],
          [
            "SimilarBetweenQuadrilateral",
            [
              "d",
              "a",
              "b",
              "c",
              "h",
              "e",
              "f",
              "g"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "mirror_similar_between_quadrilateral_definition": {
    "vars": [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h"
    ],
    "para_len": [
      4,
      4
    ],
    "body": {
      "1": {
        "products": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "b",
              "c",
              "d",
              "a",
              "h",
              "e",
              "f",
              "g"
            ]
          ],
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "c",
              "d",
              "a",
              "b",
              "g",
              "h",
              "e",
              "f"
            ]
          ],
          [
            "MirrorSimilarBetweenQuadrilateral",
            [
              "d",
              "a",
              "b",
              "c",
              "f",
              "g",
              "h",
              "e"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  },
  "is_diameter_of_circle_definition": {
    "vars": [
      "a",
      "b",
      "o"
    ],
    "para_len": [
      2,
      1
    ],
    "body": {
      "1": {
        "products": [
          [
            "IsDiameterOfCircle",
            [
              "a",
              "b",
              "o"
            ]
          ]
        ],
        "logic_constraints": [],
        "algebra_constraints": [],
        "attr_in_algebra_constraints": [],
        "conclusions": [
          [
            "IsDiameterOfCircle",
            [
              "b",
              "a",
              "o"
            ]
          ]
        ],
        "attr_in_conclusions": []
      }
    }
  }
}